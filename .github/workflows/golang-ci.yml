name: golang-ci

on:
  pull_request:
    paths:
      - "services/golang/**"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/golang
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: 'services/golang/go.sum'

      - name: Build
        run: go build -v -o bin/main.out main.go

      - uses: actions/upload-artifact@v2
        with:
          name: gobin
          path: services/golang/bin/main.out

      - name: Test
        run: go test -v ./... -coverprofile=c.out

      - uses: checkity/upload@v1
        with:
          file-pattern: '**/c.out'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          base-enabled: false # Only check overall coverage > 80%

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/download-artifact@v2
        with:
          name: gobin

      - run: file bin/main.out
      - run: du bin/main.out

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./services/golang
          file: ./services/golang/deploy/Dockerfile
          push: true
          tags: andyyaldoo/pintu:golang

      - name: Start minikube
        uses: medyagh/setup-minikube@latest
      # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster!
        run: kubectl get pods -A

      - name: helm deploy
        run: helm upgrade --install --create-namespace --atomic -f golang-values.yaml --namespace pintu golang deploy/charts/http --debug --dry-run
